{
  "name": "Gulp",
  "tagline": "The streaming build system",
  "body": "<p align=\"center\">\r\n  <a href=\"http://gulpjs.com\">\r\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\r\n  </a>\r\n  <p align=\"center\">The streaming build system</p>\r\n</p>\r\n\r\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![OpenCollective Backers][backer-badge]][backer-url] [![OpenCollective Sponsors][sponsor-badge]][sponsor-url] [![Gitter chat][gitter-image]][gitter-url]\r\n\r\n[downloads-image]: https://img.shields.io/npm/dm/gulp.svg\r\n[npm-url]: https://www.npmjs.com/package/gulp\r\n[npm-image]: https://img.shields.io/npm/v/gulp.svg\r\n\r\n[travis-url]: https://travis-ci.org/gulpjs/gulp\r\n[travis-image]: https://img.shields.io/travis/gulpjs/gulp/master.svg\r\n\r\n[coveralls-url]: https://coveralls.io/r/gulpjs/gulp\r\n[coveralls-image]: https://img.shields.io/coveralls/gulpjs/gulp/master.svg\r\n\r\n[gitter-url]: https://gitter.im/gulpjs/gulp\r\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.svg\r\n\r\n[backer-url]: #backers\r\n[backer-badge]: https://opencollective.com/gulpjs/backers/badge.svg?color=blue\r\n[sponsor-url]: #sponsors\r\n[sponsor-badge]: https://opencollective.com/gulpjs/sponsors/badge.svg?color=blue\r\n\r\n[support-url]: https://opencollective.com/gulpjs#support\r\n\r\n[backers-image]: https://opencollective.com/gulpjs/backers.svg\r\n[sponsors-image]: https://opencollective.com/gulpjs/sponsors.svg\r\n\r\n\r\n## What is gulp?\r\n\r\n- **Automation** - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow.\r\n- **Platform-agnostic** - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms.\r\n- **Strong Ecosystem** - Use npm modules to do anything you want + over 2000 curated plugins for streaming file transformations\r\n- **Simple** - By providing only a minimal API surface, gulp is easy to learn and simple to use\r\n\r\n## gulp 使用教程 jade\r\n\r\n*** \r\n*** \r\n## 1. 手动创建 src/templates/index.jade  \r\n\r\n## 2. 手动编辑 index.jade\r\n```jade\r\n\tdoctype html\r\n\thtml\r\n\t\thead\r\n\t\t\ttitle hello jade & gulp\r\n\t\tbody\r\n\t\t\th1 we used jade to generate this\r\n\t\t\tp it seems like it works! :)\r\n``` \r\n\r\n## 3. 手动创建 package.json \r\n### (CMD 自动创建 npm init) 可以手动设置 package.json 的详细内容！ \r\n```json\r\n\t{\r\n\t\t\r\n\t}\r\n``` \r\n\r\n## 4. CMD 安装 npm install --save-dev gulp \r\n```sh\r\n\t$ pm install --save-dev gulp\r\n``` \r\n\r\n## 5. CMD 安装 npm install --save-dev gulp-jade \r\n```sh\r\n\t$ npm install --save-dev gulp-jade \r\n``` \r\n\r\n## 6. 手动创建 gulpfile.js\r\n\r\n## 7. 手动编辑 gulpfile.js\r\n```javascript\r\n\tvar gulp = require('gulp'),\r\n\t\tjade = require('gulp-jade');\r\n\t\t\r\n\tgulp.task('jade',function(){\r\n\t\treturn gulp.src('src/template/**/*.jade')\r\n\t\t\t.pipe(jade())\r\n\t\t\t.pipe(gulp.dest('builds/development'));\r\n\t});\r\n``` \r\n\r\n## 8. CMD 运行 gulp jade \r\n```sh\r\n\t$ gulp jade \r\n``` \r\n\r\n## 9. 手动浏览器查看builds/development/index.html\r\n\r\n## 10. 手动编辑index.jade后，查看浏览器的变化 ? **(??? 没有变化， watching ???)** \r\n\r\n*** \r\n*** \r\n## 11. 手动创建 src/js/logger.js\r\n```javascript\r\n\tmodule.exports = {\r\n\t\tlog: function(string) {\r\n\t\t\tif(console) console.log(string);\r\n\t\t}\r\n\t}\r\n``` \r\n\r\n## 13. 手动创建 src/js/main.js\r\n```javascript\r\n\tvar logger =require('./logger');\r\n\r\n\tlogger.log('Hurray, it works! :)');\r\n``` \r\n\r\n## 14. CMD 安装 npm install --save-dev gulp-browserify \r\n```sh\r\n\t$ npm install --save-dev gulp-browserify \r\n``` \r\n\r\n## 15. 手动编辑 gulpfile.js \r\n```javascript\r\n\tvar gulp = require('gulp'),\r\n\t\tjade = require('gulp-jade'),\r\n\t\tbrowserify = require('gulp-browserify');\r\n\t\t\r\n\tgulp.task('jade',function(){\r\n\t\treturn gulp.src('src/template/**/*.jade')\r\n\t\t\t.pipe(jade())\r\n\t\t\t.pipe(gulp.dest('builds/development'));\r\n\t});\r\n\r\n\tgulp.task('js',function(){\r\n\t\treturn gulp.src('src/js/main.js')\r\n\t\t\t.pipe(browserify({ debug: true}))\r\n\t\t\t.pipe(gulp.dest('builds/development/js'));\r\n\t});\r\n``` \r\n\r\n## 16. CMD 运行 gulp js \r\n```sh\r\n\t$ gulp js \r\n``` \r\n\r\n## 17. 手动编辑 index.jade \r\n```jade\r\n\tdoctype html\r\n\thtml\r\n\t\thead\r\n\t\t\ttitle hello jade & gulp\r\n\t\tbody\r\n\t\t\th1 we used jade to generate this\r\n\t\t\tp it seems like it works! :)\r\n\t\t\tmark just check the change of jade!\r\n\t\t\tscript(src=\"./js/main.js\")\r\n``` \r\n\r\n## 18. CMD 运行 gulp jade \r\n```sh\r\n\t$ gulp jade \r\n``` \r\n\r\n## 19. 手动浏览器查看builds/development/index.html\r\n```sh\r\n\tCtrl + P \r\n\t[index.html]\r\n\t(快速定位文件并打开它)\r\n\tCtrl + Shift + P \r\n\t[Open in Browser -Productive Server]\r\n```\r\n\r\n*** \r\n*** \r\n## 20. CMD 安装 npm install --save-dev gulp-uglify \r\n```sh\r\n\t$ npm install --save-dev gulp-uglify\r\n``` \r\n\r\n## 21.  手动编辑 gulpfile.js \r\n```javascript\r\n\tvar gulp = require('gulp'),\r\n\t\tjade = require('gulp-jade'),\r\n\t\tbrowserify = require('gulp-browserify'),\r\n\t\tuglify= require('gulp-uglify');\r\n\t\t\r\n\tgulp.task('jade',function(){\r\n\t\treturn gulp.src('src/template/**/*.jade')\r\n\t\t\t.pipe(jade())\r\n\t\t\t.pipe(gulp.dest('builds/development'));\r\n\t});\r\n\r\n\tgulp.task('js',function(){\r\n\t\treturn gulp.src('src/js/main.js')\r\n\t\t\t.pipe(browserify({ debug: true}))\r\n\t\t\t.pipe(uglify())\r\n\t\t\t.pipe(gulp.dest('builds/development/js'));\r\n\t});\r\n``` \r\n\r\n## 22. CMD 运行 gulp js \r\n```sh\r\n\t$ gulp js\r\n``` \r\n\r\n## 23. 手动查看builds/development/js/main.js  PS:(13 lines -> 1 line) \r\n\r\n## 24. CMD 安装 npm install --save-dev gulp-if \r\n```sh\r\n\t$ npm install --save-dev gulp-if \r\n``` \r\n\r\n## 25.  手动编辑 gulpfile.js \r\n```javascript\r\n\tvar gulp = require('gulp'),\r\n\t\tjade = require('gulp-jade'),\r\n\t\tbrowserify = require('gulp-browserify'),\r\n\t\tuglify= require('gulp-uglify'),\r\n\t\tgulpif= require('gulp-if');\r\n\r\n\tvar env = process.env.NODE_ENV;\r\n\t\t\r\n\tgulp.task('jade',function(){\r\n\t\treturn gulp.src('src/template/**/*.jade')\r\n\t\t\t.pipe(jade())\r\n\t\t\t.pipe(gulp.dest('builds/development'));\r\n\t});\r\n\r\n\tgulp.task('js',function(){\r\n\t\treturn gulp.src('src/js/main.js')\r\n\t\t\t.pipe(browserify({ debug: env === 'development'}))\r\n\t\t\t.pipe(gulpif(env === 'production', uglify()))\r\n\t\t\t.pipe(gulp.dest('builds/development/js'));\r\n\t});\r\n``` \r\n\r\n## 26. CMD 运行 NODE_ENV=development gulp js PS:(使用开发调试模式)\r\n```sh\r\n\t$ NODE_ENV=development gulp js\r\n``` \r\n\r\n## 27. CMD 运行 NODE_ENV=production gulp js PS:(使用产品发布模式)\r\n```sh\r\n\t$ NODE_ENV=production gulp js\r\n``` \r\n\r\n## 28. 手动编辑 gulpfile.js PS:(手动：开启默认的模式)\r\n```javascript\r\n\t// var env = process.env.NODE_ENV || 'production';\r\n\tvar env = process.env.NODE_ENV || 'development';\r\n``` \r\n\r\n```javascript\r\n\tvar gulp = require('gulp'),\r\n\t\tjade = require('gulp-jade'),\r\n\t\tbrowserify = require('gulp-browserify'),\r\n\t\tuglify= require('gulp-uglify'),\r\n\t\tgulpif= require('gulp-if');\r\n\r\n\tvar env = process.env.NODE_ENV || 'production'; \r\n\t\t\r\n\tgulp.task('jade',function(){\r\n\t\treturn gulp.src('src/template/**/*.jade')\r\n\t\t\t.pipe(jade())\r\n\t\t\t.pipe(gulp.dest('builds/development'));\r\n\t});\r\n\r\n\tgulp.task('js',function(){\r\n\t\treturn gulp.src('src/js/main.js')\r\n\t\t\t.pipe(browserify({ debug: env === 'development'}))\r\n\t\t\t.pipe(gulpif(env === 'production', uglify()))\r\n\t\t\t.pipe(gulp.dest('builds/development/js'));\r\n\t});\r\n```\r\n\r\n***\r\n***\r\n## 29. CMD 安装 npm install --save-dev gulp-sass \r\n```sh\r\n\t$ npm install --save-dev gulp-sass  \r\n``` \r\n\r\n## 30. 手动编辑 gulpfile.js \r\n```javascript\r\n\tsass= require('gulp-sass');\r\n\r\n\tgulp.task('sass',function(){\r\n\t\treturn gulp.src('src/sass/main.scss')\r\n\t\t\t.pipe(sass({ sourceComments: 'map'}))\r\n\t\t\t.pipe(gulp.dest('builds/development/css'));\r\n\t});\r\n``` \r\n\r\n## 31. 手动创建 & 编辑 src/sass/main.scss\r\n```sass\r\n\tbody {\r\n\t\tcolor: $red;\r\n\t}\r\n```  \r\n\r\n## 33. 手动创建 & 编辑 src/sass/variables.scss\r\n```sass\r\n\t$red: #ff0000;\r\n\t// rgba();\r\n``` \r\n\r\n## 31. 手动编辑 src/sass/main.scss\r\n```sass\r\n\t@import \"variables\";\r\n\r\n\tbody {\r\n\t\tcolor: $red;\r\n\t}\r\n```  \r\n\r\n## 34. CMD 运行 gulp sass \r\n```sh\r\n\t$ gulp sass\r\n```   \r\n\r\n## 35. 手动编辑 index.jade \r\n```jade\r\n\tdoctype html\r\n\thtml\r\n\t\thead\r\n\t\t\ttitle hello jade & gulp\r\n\t\t\tlink(rel=\"stylesheet\" href=\"./css/main.css\")\r\n\t\tbody\r\n\t\t\th1 we used jade to generate this\r\n\t\t\tp it seems like it works! :)\r\n\t\t\tmark just check the change of jade!\r\n\t\t\tscript(src=\"./js/main.js\")\r\n``` \r\n\r\n## 36. CMD 运行 gulp jade \r\n```sh\r\n\t$ gulp jade\r\n``` \r\n\r\n## 37. 手动编辑 gulpfile.js \r\n```javascript\r\n\tvar outputDir = 'builds/development';\r\n\t//path 变量\r\n\t.pipe(gulp.dest(outputDir));\r\n\t// .pipe(gulp.dest('builds/development'));\r\n\t.pipe(gulp.dest(outputDir + '/js'));\r\n\t// .pipe(gulp.dest('builds/development/js'));\r\n\t.pipe(gulp.dest(outputDir + '/css'));\r\n    // .pipe(gulp.dest('builds/development/css'));\r\n``` \r\n\r\n```javascript\r\n\tgulp.task('sass',function(){\r\n\t\tvar config = {};\r\n\t\tif (env === 'development') {\r\n\t\t\tconfig.sourceComments = 'map';\r\n\t\t} \r\n\t\tif(env === 'production'){\r\n\t\t\tconfig.outputStyle = 'compressed';\r\n\t\t}\r\n\t\treturn gulp.src('src/sass/main.scss')\r\n\t\t\t// .pipe(sass({ sourceComments: 'map'}))\r\n\t\t\t.pipe(sass(config))\r\n\t\t\t.pipe(gulp.dest(outputDir + '/css'));\r\n\t\t\t// .pipe(gulp.dest('builds/development/css'));\r\n\t});\r\n``` \r\n\r\n## 38. CMD 运行 NODE_ENV=development gulp sass PS:(使用开发调试模式)\r\n```sh\r\n\t$ NODE_ENV=development gulp sass\r\n``` \r\n\r\n## 39. CMD 运行 NODE_ENV=production gulp sass PS:(使用产品发布模式)\r\n```sh\r\n\t$ NODE_ENV=production gulp sass\r\n``` \r\n\r\n***\r\n***\r\n## 40. 手动编辑 gulpfile.js \r\n```javascript\r\n\tgulp.task('watch',function(){\r\n\t\tgulp.watch('src/template/**/*.jade',['jade']);\r\n\t\tgulp.watch('src/js/**/*.js',['js']);\r\n\t\tgulp.watch('src/sass/**/*.scss',['sass']);\r\n\t});\r\n``` \r\n\r\n## 41. CMD 运行 gulp watch PS:(使用 watch 自动监测变化)\r\n```sh\r\n\t$ gulp watch\r\n``` \r\n\r\n## 42. 手动编辑 gulpfile.js \r\n```javascript\r\n\tgulp.task('default',['js','sass','jade','watch']);\r\n\t/*\r\n\t\tfunction(){\r\n\t\t\tgulp.watch('src/template/**/*.jade',['jade']);\r\n\t\t}\r\n\t\t=== ???\r\n\t\t['jade']\r\n\t*/\r\n``` \r\n\r\n## 43. CMD 运行 gulp PS:(使用default模式,指定 tasks)\r\n```sh\r\n\t$ gulp\r\n``` \r\n\r\n## 44.  CMD 运行 Ctrl + C (退出 watch / default 模式)\r\n\r\n***\r\n***\r\n## 45. CMD 安装 npm install --save-dev gulp-connect \r\n```sh\r\n\t$ npm install --save-dev gulp-connect  \r\n``` \r\n\r\n## 46. 手动编辑 gulpfile.js  PS:(自动启动Web Server,打开browser,可以配置端口)\r\n```javascript\r\n\tconnect= require('gulp-connect');\r\n\r\n\tgulp.task('connect',connect.server({\r\n\t\troot: [outputDir],\r\n\t\topen: { browser: 'Google Chrome'}\r\n\t}));\r\n\r\n\tgulp.task('default',['js','sass','jade','watch','connect']);\r\n```  \r\n\r\n## 47. CMD 运行 gulp PS:(使用default模式,指定 tasks)\r\n```sh\r\n\t$ gulp\r\n``` \r\n\r\n## 48. 手动编辑 gulpfile.js  PS:(自动刷新 .pipe(connect.reload());)\r\n```javascript\r\n\tgulp.task('jade',function(){\r\n\t\treturn gulp.src('src/template/**/*.jade')\r\n\t\t\t.pipe(jade())\r\n\t\t\t.pipe(gulp.dest(outputDir))\r\n\t\t\t.pipe(connect.reload());\r\n\t\t\t// .pipe(gulp.dest('builds/development'));\r\n\t});\r\n\r\n\tgulp.task('js',function(){\r\n\t\treturn gulp.src('src/js/main.js')\r\n\t\t\t.pipe(browserify({ debug: env === 'development'}))\r\n\t\t\t.pipe(gulpif(env === 'production', uglify()))\r\n\t\t\t.pipe(uglify())\r\n\t\t\t.pipe(gulp.dest(outputDir + '/js'))\r\n\t\t\t.pipe(connect.reload());\r\n\t\t\t// .pipe(gulp.dest('builds/development/js'));\r\n\t});\r\n\r\n\tgulp.task('sass',function(){\r\n\t\tvar config = {};\r\n\t\tif (env === 'development') {\r\n\t\t\tconfig.sourceComments = 'map';\r\n\t\t} \r\n\t\tif(env === 'production'){\r\n\t\t\tconfig.outputStyle = 'compressed';\r\n\t\t}\r\n\t\treturn gulp.src('src/sass/main.scss')\r\n\t\t\t// .pipe(sass({ sourceComments: 'map'}))\r\n\t\t\t.pipe(sass(config))\r\n\t\t\t.pipe(gulp.dest(outputDir + '/css'))\r\n\t\t\t.pipe(connect.reload());\r\n\t\t\t// .pipe(gulp.dest('builds/development/css'));\r\n\t});\r\n```  \r\n\r\n## 49. CMD 运行 gulp \r\n```sh\r\n\t$ gulp\r\n``` \r\n\r\n## 50. some errors\r\n[here some errors, what's wrong with this? #202](https://github.com/AveVlad/gulp-connect/issues/202)\r\n[Get started with gulp Part 6: LiveReload and web server](https://www.youtube.com/watch?v=KURMrW-HsY4&index=7&list=PLRk95HPmOM6PN-G1xyKj9q6ap_dc9Yckm)\r\n[/images/errors/](https://github.com/xgqfrms/AngularJS/tree/gh-pages/images/errors)\r\n[gulp-test](https://github.com/xgqfrms/AngularJS/tree/gh-pages/gulp-test)\r\n```javascript\r\n\t/*\r\n\tgulp.task('connect',connect.server({\r\n\t\troot: [outputDir],\r\n\t\topen: { browser: 'Google Chrome'}\r\n\t}));\r\n\t*/\r\n\t//https://github.com/AveVlad/gulp-connect\r\n\r\n\tgulp.task('connect',function(){\r\n\t\tconnect.server({\r\n\t\t\troot: [outputDir],\r\n\t\t\tport: 8080,\r\n\t\t    livereload: true,\r\n\t\t\t// open: { browser: 'Google Chrome'}\r\n\t\t});\r\n\t});\r\n``` \r\n\r\n\r\n\r\n## bugs fixed ?\r\n\r\n### 手动编辑 gulpfile.js \r\n\r\n'''javascript\r\n\tvar env = process.env.NODE_ENV;\r\n'''\r\n\r\n>\r\nCMD: 手动 传入参数 \r\nset NODE_ENV=development\r\nset NODE_ENV=production\r\n\r\n'''bash\r\n\t$ set NODE_ENV=development\r\n\t$ gulp\r\n'''\r\n'''bash\r\n\t$ set NODE_ENV=production\r\n\t$ gulp\r\n'''\r\n\r\n???\r\n### why it doesn't work by using \r\n// var env = process.env.NODE_ENV || 'production';\r\n// var env = process.env.NODE_ENV || 'development';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n## Using gulp with browserify without the plugin\r\n\r\n### npm install --save-dev gulp browserify vinyl-source-stream\r\n```sh\r\n\tnpm install --save-dev gulp browserify vinyl-source-stream\r\n\t===\r\n\tnpm install --save-dev gulp \r\n\tnpm install --save-dev browserify\r\n\tnpm install --save-dev vinyl-source-stream\r\n``` \r\n### npm install --save-dev gulp-uglify\r\n\r\n### npm install --save-dev gulp-streamify\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}